name: github-actions-test
on:
  push:
    tags: 
      - 'v*'
    branches:
      - main
  page_build:
  release:
    types:
      - creates
jobs:
  automate-bom-generation:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: install bats
        run: npm install -g bats
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
      - run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.files.outputs.added_modified }}')
          for added_modified_file in "${added_modified_files[@]}"; do
          echo "Do something with this ${added_modified_file}."
          done
      - name: check bats version
        run: bats -v
      - name: update and refresh repo lists
        run: sudo apt update
      - name: install supporting software
        run: sudo apt install software-properties-common
      - name: add Deadsnakes PPA
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
      - name: install python 3
        run: sudo apt install python3.8
      - name: check python version
        run: python --version
      - name: get packages
        run: sudo apt-get -y install tigervnc-standalone-server blackbox xterm libpulse0 command-not-found wget bzip2 xvfb xdotool
      - name: adduser
        run: sudo adduser --gecos 'User Name,,,' --disabled-password user
      - name: download eagle
        run: wget -q -O /tmp/eagle.tar.gz https://www.autodesk.com/eagle-download-lin
      - name: set time zone
        run: sudo ln -sf /usr/share/zoneinfo/UTC /etc/localtime
      - run: sudo apt-get -y install locales
      - run: sudo -i
      # - run: cat /etc/locale.gen
      # - run: echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen
      - run: sudo /usr/sbin/locale-gen
      - name: install eagle dependencies
        run: sudo apt-get -y install libnspr4 libglib2.0-0 libnss3 libasound2 man-db
      - name: make eagle folder
        run: mkdir -p /opt/eagle-9.6.2
      - name: chown eagle
        run: sudo chown user:user /opt/eagle-9.6.2
      - run: sudo mkdir -p /home/user/bin
      - name: chown bin
        run: sudo chown -R user:user /home/user/bin
      - run: sudo mv ELECROW_gerber_v9.cam /home/user/ELECROW_gerber_v9.cam
      - run: sudo mv optoSensor.brd /home/user/optoSensor.brd
      - name: unzip
        run: tar zxpf /tmp/eagle.tar.gz
      - run: sudo cp -r eagle-9.6.2 /opt/
      - name: make eagle dir
        run: sudo mkdir /home/user/eagle
      - name: chmod start
        run: chmod +x start.sh
      - name: connect dummy display
        run: ./start.sh
      - name: remove zip
        run: rm /tmp/eagle.tar.gz
      - name: move creds file
        run: sudo mv creds.json /creds.json
      - name: Install dependencies
        run: |
            sudo python -m pip install --upgrade pip
            sudo pip3 install -r requirements.txt
      - name: grant permissions to python file
        run: sudo chmod +x /home/user/bin/CAM/boms-auto.py
      - name: create env secret
        env:
          credentials: ${{ secrets.credentials }}
        run: echo Hello World
      - name: run python file
        run: sudo python3 /home/user/bin/CAM/boms-auto.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
